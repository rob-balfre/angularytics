(function(){angular.module("angularytics",[]).provider("Angularytics",function(){var e=["Google"];this.setEventHandlers=function(n){angular.isString(n)&&(n=[n]);e=[];angular.forEach(n,function(n){e.push(t(n))})};var t=function(e){return e.charAt(0).toUpperCase()+e.substring(1)},n="$locationChangeSuccess";this.setPageChangeEvent=function(e){n=e};this.$get=["$injector","$rootScope","$location",function(t,r,i){var s=[];angular.forEach(e,function(e){s.push(t.get("Angularytics"+e+"Handler"))});var o=function(e){angular.forEach(s,function(t){e(t)})},u={};u.init=function(){};u.trackEvent=function(e,t,n,r,i){o(function(s){e&&t&&s.trackEvent(e,t,n,r,i)})};u.trackPageView=function(e){o(function(t){e&&t.trackPageView(e)})};r.$on(n,function(){Object.keys(i.search()).length>0?u.trackPageView(i.path()+", "+JSON.stringify(i.search())):u.trackPageView(i.path())});return u}]})})();(function(){angular.module("angularytics").factory("AngularyticsConsoleHandler",["$log",function(e){var t={};t.trackPageView=function(t){e.log("URL visited",t)};t.trackEvent=function(t,n,r,i,s){e.log("Event tracked",t,n,r,i,s)};return t}])})();(function(){angular.module("angularytics").factory("AngularyticsGoogleHandler",["$log",function(e){var t={};t.trackPageView=function(e){_gaq.push(["_set","page",e]);_gaq.push(["_trackPageview",e])};t.trackEvent=function(e,t,n,r,i){_gaq.push(["_trackEvent",e,t,n,r,i])};return t}]).factory("AngularyticsGoogleUniversalHandler",function(){var e={};e.trackPageView=function(e){ga("set","page",e);ga("send","pageview",e)};e.trackEvent=function(e,t,n,r,i){ga("send","event",e,t,n,r,{nonInteraction:i})};return e})})();(function(){angular.module("angularytics").filter("trackEvent",["Angularytics",function(e){return function(t,n,r,i,s,o){e.trackEvent(n,r,i,s,o);return t}}])})();